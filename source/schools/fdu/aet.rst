=====================================
工程与应用技术研究院
=====================================
.. _fduaet:

https://faet.fudan.edu.cn/


招生形式
=====================================

夏令营（硕士，直博），开的很早

预推免（直博）（如果没被鸽穿则无预推免）


2020级更新
=====================================

----
夏令营（计算机方向直博）
----

这个学院拿到优营/候补后不能直博转学硕，隔壁复旦类脑是可以，比如你拿到直博优营，后期可以直接转学硕。

我报的是计算机方向直博，但工研院是直博学硕专硕一起面试机试，内容一样，最后统一发优营，你直博报的老师，最后不一定去，拿到优营还可以联系其他老师。二张组（zwq, zlh）非常抢手，会有组内考核（入营后加面），建议提前联系。

bar非常高，学硕据我所知自动化第2好像都没入营，中南学硕23年0入营，直博或者其他方向（非计算机）的bar会低一点。

----
机试面试题
----

面试：

1. 英语提问，英语自我介绍是2-3个模板问题，我被问到了为什么选择复旦，对哪个老师实验室感兴趣为什么。
2. 考察你高分的科目，题主就被问了编译原理（简历上最高分的课）：编译器常见的组成部分，什么是link，以及设计模式，有多少种设计模式，简单说下单例模式。
3. 考察昨天的编程题，问你没做出来的有没有思路，时间复杂度以及优化方法
4. 考察你的项目。没报直博的还会问，读博意愿。

机试：

这次工研院线下有机试，但很简单。
环境：VSCode但用不了，博主的环境没配好，需要自己配json文件，但不能联网，还有VS2019，DevC++，java有Eclipse，Python的没记住。

    **值得注意的是，工研院的机试，第二天面试的时候，老师会提问，你没做出来的题，或者问题你做出来的题的时间复杂度和优化方法，所以即使没做出来，也要问一下大佬同学。**

1. 比较两个数的大小，没有任何坑，输入数据用int就行，就是输入a b，输出> < 或=
2. 给m个一样的苹果，n个一样盘子，将m个苹果全部放到盘子上，允许有盘子空着不放，比如7个苹果，3个盘子，0:0:7和7:0:0是一种情况，那么7个苹果3个盘子就是8中情况。数据范围：最多十个盘子，十个苹果。
3. 输入一个二维矩阵，仅包含*和@，@的上下左右，包括四个斜角的八个方向，如果有@就合并为一个集合，问最后能有多少集合。
   比如:

.. code-block:: c

    *@*@*
    **@**
    *@*@*	# 这是一个集合


    ***@@*@@*@	# 这是两个集合


2，3题解题思路：

.. code-block:: c
    :linenos:

    // 我第二题直接用的暴力DFS，遍历所有情况，然后合并相同的情况，中途有一些剪枝，但还是可能会超时，时间复杂度是m^(n-1)，就是10^9，虽然最后这道题过了。附我保去thu的大佬同学的dp解法，只要10^4
    // 第三题直接DFS，加一个状态矩阵遍历一遍就可以了，就不在这里罗列了
    // 第二题dp解法
    #include<iostream>
    using namespace std;
    const int N = 10;
    int n,m; //n个盘子，m个果子
    int f[N][N][N]; //状态表示 i j k，当前安置到第i个盘子，总共使用了j个苹果，且第i个盘子上的苹果为k个

    // f[i][j][k] = f[i-1][j-k][0] + f[i-1][j-k][1] +...+ f[i-1][j-k][k]


    int main()
    {
        freopen("011.in","r",stdin);

        cin>>n>>m;
        for(int i = 0;i<=m;i++)
            f[1][i][i] =1;
        
        for(int i = 2;i<=n;i++) //n*m*m*m
            for(int j = 0;j<=m;j++)
                for(int k = 0;k<=j;k++) //状态转移
                    for(int t = 0;t<=j-k&&t<=k;t++)
                        f[i][j][k] += f[i-1][j-k][t];

        
        int res=0;
        for(int i=0;i<=m;i++)
            res+=f[n][m][i];
        
        cout<<res;

        return 0;
    }


作者
--------------------------------------
:ref:`雨夜闭门<RainyNight>`
